A social recipe website providing a better way to share recipes.

DEPLOYING
=========
Deployment to new environments (production, additonal development machines, etc.)
should be as painless as possible. To that end, we'll make an effort to document
and automate as much of the setup process as possible.

DEPLOYING FOR LOCAL DEVELOPMENT
===============================
As a baseline, here are the prerequisites to running tomcookery (installation
will vary by platform and won't be elaborated upon here):

    * Python (2.5 or later, for its included SQLite)
    * Django (1.2 or later)
    * Python Imaging Library (1.1.7 is current as of development)

To get tomcookery up and running from scratch (assuming you've got the
dependencies mentioned above installed), here are the steps you need to follow:

    * Grab the source from http://github.com/lhanson/tomcookery
    * Navigate into the tomcookery directory:
      $ cd tomcookery
    * Set up the local database:
      $ python manage.py syncdb
    * Create a superuser account (the above step will prompt for one, but
      here's how to create another:
      $ python manage.py createsuperuser --username=joe --email=joe@example.com
    * Start the development server:
      $ python manage.py runserver
    * See the site at http://localhost:8000
    * Log into the admin portlet at http://localhost:8000/admin

To populate the database with some test data, use the fixtures located in
tomcookery/app/fixtures. They can be loaded as follows:
    * $ python manage.py loaddata FIXTURE_NAME

DEPLOYING ON A SERVER ENVIRONMENT
=================================
The software requirements for a server installation include those mentioned
above for local deployment, and also the following:

    * PostgreSQL
    * Apache
    * mod_wsgi

To get a server environment up and running here is the general outline:

    * Set up a Postgres database and user for the application
    * Make sure Apache is running and configured correctly with mod_wsgi enabled
    * Get the tomcookery read-only source:
      $ git clone git://github.com/lhanson/tomcookery.git
    * Create local_settings.py and override default database info, SECRET_KEY,
      ADMIN email addresses, and set DEBUG = TEMPLATE_DEBUG = False
    * From the tomcookery directory, initialize the tomcookery database:
      $ python manage.py syncdb

DATA MIGRATIONS
===============
Inevitably, we'll want to change the models (and therefore the underlying
database schema) after we've already got the app set up. Our goal here is
to make migrations as seamless and automated as possible, both in development
and in the deployed app.

To that end, I'm using South (http://south.aeracode.org/docs/index.html)
to handle migrations.

Basic steps to work with migrations:
    * Install South. See the documentation.
    * Create the South migration-tracking tables:
      $ python manage.py syncdb
    * Create the baseline migration:
      $ python manage.py schemamigration app --initial
    * Continue development, change the models
    * Create the migration to update the schema:
      $ python manage.py schemamigration app --auto [CHANGE_NAME]
    * Run the migration to update the schema:
      $ python manage.py migrate app [CHANGE_NAME]
    * To get help, see the docs or run:
      $ python manage.py migrate --help
